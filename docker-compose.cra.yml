services:
  traefik:
    image: traefik:v3.0
    command:
      - "--api.dashboard=true"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--providers.docker.network=app-network"
      - "--entrypoints.web.address=:80"
      - "--entrypoints.websecure.address=:443"
      - "--entrypoints.metrics.address=:8080"
      - "--certificatesresolvers.myresolver.acme.tlschallenge=true"
      - "--certificatesresolvers.myresolver.acme.email=sigcratotumo@gmail.com"
      - "--certificatesresolvers.myresolver.acme.storage=/letsencrypt/acme.json"
      # ✅ FIX: Use a middleware for HTTP-to-HTTPS redirection
      - "--entrypoints.web.http.middlewares=redirect-to-https@docker"
      # ✅ FIX: Define the middleware using v3 syntax (no "http." prefix)
      - "--middlewares.redirect-to-https.redirectscheme.scheme=https"
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./letsencrypt:/letsencrypt
    networks:
      - app-network
    restart: unless-stopped
    labels:
      # ✅ FIX: Add labels for the Traefik v3 dashboard
      - "traefik.enable=true"
      - "traefik.http.routers.dashboard.rule=Host(`traefik.${DOMAIN}`)"
      - "traefik.http.routers.dashboard.entrypoints=websecure"
      - "traefik.http.routers.dashboard.tls.certresolver=myresolver"
      - "traefik.http.routers.dashboard.service=api@internal"
      # CORS Middleware
      - "traefik.http.middlewares.cors.headers.accesscontrolallowmethods=GET,OPTIONS,PUT,POST,DELETE"
      - "traefik.http.middlewares.cors.headers.accesscontrolallowheaders=*"
      - "traefik.http.middlewares.cors.headers.accesscontrolalloworiginlist=https://*.${DOMAIN},https://${DOMAIN}"
      - "traefik.http.middlewares.cors.headers.accesscontrolmaxage=100"
      - "traefik.http.middlewares.cors.headers.addvaryheader=true"
      - "com.metamag.project=sig-platform"

  api-laravel:
    image: lcrojano1/api-laravel-cra:latest
    env_file: ./apps/api-laravel/.env
    #user: "33:33"
    volumes:
      - ./tools/docker/php/upload.ini:/usr/local/etc/php/conf.d/uploads.ini
      - ./tools/docker/php/www.conf:/usr/local/etc/php-fpm.d/zz-www.conf
      - ./apps/tileserver-gl:/data
    depends_on:
      mysql:
        condition: service_healthy
    networks:
      - app-network
    restart: unless-stopped
    labels:
      - "com.metamag.project=sig-platform"

  api-laravel-nginx:
    image: nginx:alpine
    volumes:
      - ./tools/docker/nginx/api.custom.conf:/etc/nginx/conf.d/default.conf
    mem_limit: 128m
    depends_on:
      - api-laravel
    networks:
      - app-network
    restart: unless-stopped
    labels:
      - "traefik.enable=true"
      - "traefik.docker.network=app-network"
      # --- Service & Router Definition ---
      - "traefik.http.services.api-laravel-svc.loadbalancer.server.port=80"
      - "traefik.http.routers.api-laravel.rule=Host(`api.${DOMAIN}`)"
      - "traefik.http.routers.api-laravel.entrypoints=websecure"
      - "traefik.http.routers.api-laravel.tls.certresolver=myresolver"
      - "traefik.http.routers.api-laravel.service=api-laravel-svc"
      - "traefik.http.routers.api-laravel.middlewares=cors@docker"

  client-ui-nginx:
 
    image: lcrojano1/nginx-client-ui-cra:latest
    volumes:
      - ./tools/docker/nginx/client.custom.conf:/etc/nginx/conf.d/default.conf
      - ./apps/client-ui/src/assets/app.config.json:/usr/share/nginx/html/assets/app.config.json
    networks:
      - app-network
    depends_on:
      - api-laravel
      - tileserver
    restart: unless-stopped
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.client-ui.rule=Host(`${DOMAIN}`)"
      - "traefik.http.routers.client-ui.entrypoints=websecure"
      - "traefik.http.routers.client-ui.tls.certresolver=myresolver"
      - "traefik.http.services.client-ui.loadbalancer.server.port=80"
      - "traefik.docker.network=app-network"
      - "com.metamag.project=sig-platform"

  tileserver:
 
    image: lcrojano1/tileserver-gl-cra:latest
    volumes:
      - tileserver_data:/data
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.tileserver.rule=Host(`tiles.${DOMAIN}`)"
      - "traefik.http.routers.tileserver.entrypoints=websecure"
      - "traefik.http.routers.tileserver.tls.certresolver=myresolver"
      - "traefik.http.services.tileserver.loadbalancer.server.port=80"
      - "traefik.docker.network=app-network"
      - "com.metamag.project=sig-platform"

networks:
  app-network:
    driver: bridge
    name: app-network
    labels:
      - "com.metamag.project=sig-platform"

volumes:
  tileserver_data: